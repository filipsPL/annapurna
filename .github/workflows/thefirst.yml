name: CI (conda)
on:
  push:
    paths-ignore:
    - 'README.md'
    - '.gitignore'
    - 'models/'
    - 'obrazki/'
    - 'data/'
jobs:
  build:
    strategy:
      matrix:
        # os: ['ubuntu-latest', 'macos-latest', 'windows-latest']
        os: ['ubuntu-latest']
        # python-version: [2.7.14]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: install miniconda
        shell: bash
        run: |
          wget --quiet https://repo.anaconda.com/miniconda/Miniconda2-latest-Linux-x86_64.sh -O ~/miniconda.sh
          bash ~/miniconda.sh -b -p $HOME/miniconda
          conda env list
          conda env create -f conda-environment.yml
          conda init bash --dry-run --verbose
          echo "Adding path"
          export XDG_CONFIG_HOME=$HOME/.config
          export PATH="$PATH:$HOME/.dotnet/tools"
          export PATH="$PATH:$HOME/.config/composer/vendor/bin"
          __conda_setup="$('/usr/share/miniconda/bin/conda' 'shell.bash' 'hook' 2> /dev/null)"
          if [ $? -eq 0 ]; then
              eval "$__conda_setup"
          else
              if [ -f "/usr/share/miniconda/etc/profile.d/conda.sh" ]; then
                  . "/usr/share/miniconda/etc/profile.d/conda.sh"
              else
                  export PATH="/usr/share/miniconda/bin:$PATH"
              fi
          fi
          unset __conda_setup
          echo "---------Activate---------"
          conda activate annapurna
          conda list
      - name: run tests
        shell: bash
        run: |
          ./annapurna.py --help
          # ./annapurna-tests.sh
